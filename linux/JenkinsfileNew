
pipeline {
  agent any
  stages {
    stage ("Install kubectl") {
      steps {
        sh 'curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl"'  
        sh 'chmod u+x ./kubectl'  
        sh 'export KUBECONFIG=/home/cloud_user/config'
        sh 'kubectl get pods -A'
        sh 'ls'
      }
    }
    
 stage("Install helm"){
    steps{
         sh 'sudo snap install helm --classic'
    }}

 stage("Create docker image"){
    steps{
         sh 'sudo docker build flaskapp/.'
    }}

// stage("Push docker image"){
//    steps{
//         sh 'sudo docker push dudus/docker-flask-test'
//    }}

 stage("Create helm chart"){
    steps{
         sh 'helm create flaskapp_helm_files'
    }}
    
 stage("Install app"){
    steps{

         //sh 'helm delete flaskapp'
         
         sh 'helm upgrade -i flaskapp flaskapp-0.1.0.tgz'
         script {
         sh 'count=1; while [ `kubectl get po -o=wide | awk NR!=1 | awk \'{print $2}\'` != \'1/2\' ] && [ $count -lt 5  ] ; do kubectl get po -o=wide | awk NR!=1 | awk \'{print $2}\';let count++;  done'    
         }

         sh 'helm ls -A'
         sh 'kubectl get pods -A'
    }}
 
 stage("Setting port"){
    steps{
        script {
        //sh 'kubectl get po | grep flask-deployment- | awk \'{print $1}\' > podNameRes''
        sh 'kubectl get po | grep flask-deployment- | awk \'{print $1}\' > podNameRes'
        podName = readFile('podNameRes').trim()
        podName
        sh 'kubectl port-forward ' + podName + ' 31000:5000&'}
    }}
    
         
    }
}
